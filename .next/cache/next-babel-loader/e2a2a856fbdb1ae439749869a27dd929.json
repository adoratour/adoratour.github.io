{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _Button from \"antd/lib/button\";\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\TripFinder\\\\packages\\\\hotel-next\\\\components\\\\SectionVisaGrid\\\\SectionVisaGrid.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Text from 'components/UI/Text/Text';\nimport Box from 'components/UI/Box/Box';\nimport VisaCard from '../VisaCard/VisaCard';\n\nconst LoadMore = ({\n  handleLoadMore,\n  showButton,\n  buttonText,\n  loading,\n  loadMoreComponent,\n  loadMoreStyle\n}) => {\n  return !!showButton && __jsx(Box, _extends({\n    className: \"loadmore_wrapper\"\n  }, loadMoreStyle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }), loadMoreComponent ? loadMoreComponent : __jsx(_Button, {\n    loading: loading,\n    onClick: handleLoadMore,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 25\n    }\n  }, buttonText || 'Load More'));\n};\n\n_c = LoadMore;\nexport default function SectionVisaGrid({\n  data = [],\n  totalItem,\n  limit,\n  columnWidth,\n  paginationComponent,\n  handleLoadMore,\n  loadMoreComponent,\n  placeholder,\n  loading,\n  buttonText,\n  rowStyle,\n  columnStyle,\n  loadMoreStyle,\n  link\n}) {\n  const n = limit ? Number(limit) : 1;\n  const limits = Array(n).fill(0);\n  let showButton = data.length < totalItem;\n  return __jsx(React.Fragment, null, __jsx(Box, _extends({\n    className: \"grid_wrapper\"\n  }, rowStyle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }), data && data.length ? data.map(item => {\n    return __jsx(Box, _extends({\n      className: \"grid_column\",\n      width: columnWidth,\n      key: item.id\n    }, columnStyle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 29\n      }\n    }), __jsx(VisaCard, _extends({\n      link: link\n    }, item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 33\n      }\n    })));\n  }) : null, loading && limits.map((item, i) => __jsx(Box, _extends({\n    className: \"grid_column\",\n    width: columnWidth,\n    key: i\n  }, columnStyle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 25\n    }\n  }), placeholder ? placeholder : __jsx(Text, {\n    content: \"Loading ...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 58\n    }\n  })))), showButton && __jsx(LoadMore, {\n    showButton: showButton,\n    handleLoadMore: handleLoadMore,\n    loading: loading,\n    buttonText: buttonText,\n    loadMoreComponent: loadMoreComponent,\n    loadMoreStyle: loadMoreStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }), paginationComponent && __jsx(Box, {\n    className: \"pagination_wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, paginationComponent));\n}\n_c2 = SectionVisaGrid;\nSectionVisaGrid.propTypes = {\n  data: PropTypes.array.isRequired,\n  totalItem: PropTypes.number,\n  columnWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.array]),\n  paginationComponent: PropTypes.element,\n  handleLoadMore: PropTypes.func,\n  loadMoreComponent: PropTypes.element,\n  placeholder: PropTypes.element,\n  loading: PropTypes.bool,\n  limit: PropTypes.number,\n  buttonText: PropTypes.string,\n  rowStyle: PropTypes.object,\n  columnStyle: PropTypes.object,\n  loadMoreStyle: PropTypes.object\n};\nSectionVisaGrid.defaultProps = {\n  rowStyle: {\n    flexBox: true,\n    flexWrap: 'wrap',\n    mr: ['-10px', '-10px', '-10px', '-10px', '-10px', '-15px'],\n    ml: ['-10px', '-10px', '-10px', '-10px', '-10px', '-15px']\n  },\n  columnStyle: {\n    pr: ['10px', '10px', '10px', '10px', '10px', '15px'],\n    pl: ['10px', '10px', '10px', '10px', '10px', '15px']\n  },\n  loadMoreStyle: {\n    flexBox: true,\n    justifyContent: 'center',\n    mt: '1rem'\n  }\n};\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LoadMore\");\n$RefreshReg$(_c2, \"SectionVisaGrid\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/TripFinder/packages/hotel-next/components/SectionVisaGrid/SectionVisaGrid.js"],"names":["React","PropTypes","Text","Box","VisaCard","LoadMore","handleLoadMore","showButton","buttonText","loading","loadMoreComponent","loadMoreStyle","SectionVisaGrid","data","totalItem","limit","columnWidth","paginationComponent","placeholder","rowStyle","columnStyle","link","n","Number","limits","Array","fill","length","map","item","id","i","propTypes","array","isRequired","number","oneOfType","string","element","func","bool","object","defaultProps","flexBox","flexWrap","mr","ml","pr","pl","justifyContent","mt"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Text from 'components/UI/Text/Text';\r\nimport Box from 'components/UI/Box/Box';\r\nimport { Button } from 'antd';\r\nimport VisaCard from '../VisaCard/VisaCard';\r\n\r\nconst LoadMore = ({\r\n    handleLoadMore,\r\n    showButton,\r\n    buttonText,\r\n    loading,\r\n    loadMoreComponent,\r\n    loadMoreStyle,\r\n}) => {\r\n    return (\r\n        !!showButton && (\r\n            <Box className=\"loadmore_wrapper\" {...loadMoreStyle}>\r\n                {loadMoreComponent ? (\r\n                    loadMoreComponent\r\n                ) : (\r\n                        <Button loading={loading} onClick={handleLoadMore}>\r\n                            {buttonText || 'Load More'}\r\n                        </Button>\r\n                    )}\r\n            </Box>\r\n        )\r\n    );\r\n};\r\n\r\nexport default function SectionVisaGrid({\r\n    data = [],\r\n    totalItem,\r\n    limit,\r\n    columnWidth,\r\n    paginationComponent,\r\n    handleLoadMore,\r\n    loadMoreComponent,\r\n    placeholder,\r\n    loading,\r\n    buttonText,\r\n    rowStyle,\r\n    columnStyle,\r\n    loadMoreStyle,\r\n    link,\r\n}) {\r\n    const n = limit ? Number(limit) : 1;\r\n    const limits = Array(n).fill(0);\r\n\r\n    let showButton = data.length < totalItem;\r\n\r\n    return (\r\n        <>\r\n            <Box className=\"grid_wrapper\" {...rowStyle}>\r\n                {data && data.length\r\n                    ? data.map((item) => {\r\n                        return (\r\n                            <Box\r\n                                className=\"grid_column\"\r\n                                width={columnWidth}\r\n                                key={item.id}\r\n                                {...columnStyle}\r\n                            >\r\n                                <VisaCard link={link} {...item} />\r\n                            </Box>\r\n                        );\r\n                    })\r\n                    : null}\r\n                {loading &&\r\n                    limits.map((item, i) => (\r\n                        <Box\r\n                            className=\"grid_column\"\r\n                            width={columnWidth}\r\n                            key={i}\r\n                            {...columnStyle}\r\n                        >\r\n                            {placeholder ? placeholder : <Text content=\"Loading ...\" />}\r\n                        </Box>\r\n                    ))}\r\n            </Box>\r\n\r\n            {showButton && (\r\n                <LoadMore\r\n                    showButton={showButton}\r\n                    handleLoadMore={handleLoadMore}\r\n                    loading={loading}\r\n                    buttonText={buttonText}\r\n                    loadMoreComponent={loadMoreComponent}\r\n                    loadMoreStyle={loadMoreStyle}\r\n                />\r\n            )}\r\n            {paginationComponent && (\r\n                <Box className=\"pagination_wrapper\">{paginationComponent}</Box>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nSectionVisaGrid.propTypes = {\r\n    data: PropTypes.array.isRequired,\r\n    totalItem: PropTypes.number,\r\n    columnWidth: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.number,\r\n        PropTypes.array,\r\n    ]),\r\n    paginationComponent: PropTypes.element,\r\n    handleLoadMore: PropTypes.func,\r\n    loadMoreComponent: PropTypes.element,\r\n    placeholder: PropTypes.element,\r\n    loading: PropTypes.bool,\r\n    limit: PropTypes.number,\r\n    buttonText: PropTypes.string,\r\n    rowStyle: PropTypes.object,\r\n    columnStyle: PropTypes.object,\r\n    loadMoreStyle: PropTypes.object,\r\n};\r\n\r\nSectionVisaGrid.defaultProps = {\r\n    rowStyle: {\r\n        flexBox: true,\r\n        flexWrap: 'wrap',\r\n        mr: ['-10px', '-10px', '-10px', '-10px', '-10px', '-15px'],\r\n        ml: ['-10px', '-10px', '-10px', '-10px', '-10px', '-15px'],\r\n    },\r\n    columnStyle: {\r\n        pr: ['10px', '10px', '10px', '10px', '10px', '15px'],\r\n        pl: ['10px', '10px', '10px', '10px', '10px', '15px'],\r\n    },\r\n    loadMoreStyle: {\r\n        flexBox: true,\r\n        justifyContent: 'center',\r\n        mt: '1rem',\r\n    },\r\n};\r\n"]},"metadata":{},"sourceType":"module"}