{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _Button from \"antd/lib/button\";\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\TripFinder\\\\packages\\\\hotel-next\\\\components\\\\SectionSimGrid\\\\SectionSimGrid.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Text from 'components/UI/Text/Text';\nimport Box from 'components/UI/Box/Box';\nimport SimCard from '../SimCard/SimCard';\n\nconst LoadMore = ({\n  handleLoadMore,\n  showButton,\n  buttonText,\n  loading,\n  loadMoreComponent,\n  loadMoreStyle\n}) => {\n  return !!showButton && __jsx(Box, _extends({\n    className: \"loadmore_wrapper\"\n  }, loadMoreStyle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }), loadMoreComponent ? loadMoreComponent : __jsx(_Button, {\n    loading: loading,\n    onClick: handleLoadMore,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }, buttonText || 'Load More'));\n};\n\n_c = LoadMore;\nexport default function SectionSimGrid({\n  data = [],\n  totalItem,\n  limit,\n  columnWidth,\n  paginationComponent,\n  handleLoadMore,\n  loadMoreComponent,\n  placeholder,\n  loading,\n  buttonText,\n  rowStyle,\n  columnStyle,\n  loadMoreStyle,\n  link\n}) {\n  const n = limit ? Number(limit) : 1;\n  const limits = Array(n).fill(0);\n  let showButton = data.length < totalItem;\n  return __jsx(React.Fragment, null, __jsx(Box, _extends({\n    className: \"grid_wrapper\"\n  }, rowStyle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }), data && data.length ? data.map(item => {\n    return __jsx(Box, _extends({\n      className: \"grid_column\",\n      width: columnWidth,\n      key: item.id\n    }, columnStyle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }), __jsx(SimCard, _extends({\n      link: link\n    }, item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 19\n      }\n    })));\n  }) : null, loading && limits.map((item, i) => __jsx(Box, _extends({\n    className: \"grid_column\",\n    width: columnWidth,\n    key: i\n  }, columnStyle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }), placeholder ? placeholder : __jsx(Text, {\n    content: \"Loading ...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 44\n    }\n  })))), showButton && __jsx(LoadMore, {\n    showButton: showButton,\n    handleLoadMore: handleLoadMore,\n    loading: loading,\n    buttonText: buttonText,\n    loadMoreComponent: loadMoreComponent,\n    loadMoreStyle: loadMoreStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }), paginationComponent && __jsx(Box, {\n    className: \"pagination_wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, paginationComponent));\n}\n_c2 = SectionSimGrid;\nSectionSimGrid.propTypes = {\n  data: PropTypes.array.isRequired,\n  totalItem: PropTypes.number,\n  columnWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.array]),\n  paginationComponent: PropTypes.element,\n  handleLoadMore: PropTypes.func,\n  loadMoreComponent: PropTypes.element,\n  placeholder: PropTypes.element,\n  loading: PropTypes.bool,\n  limit: PropTypes.number,\n  buttonText: PropTypes.string,\n  rowStyle: PropTypes.object,\n  columnStyle: PropTypes.object,\n  loadMoreStyle: PropTypes.object\n};\nSectionSimGrid.defaultProps = {\n  rowStyle: {\n    flexBox: true,\n    flexWrap: 'wrap',\n    mr: ['-10px', '-10px', '-10px', '-10px', '-10px', '-15px'],\n    ml: ['-10px', '-10px', '-10px', '-10px', '-10px', '-15px']\n  },\n  columnStyle: {\n    pr: ['10px', '10px', '10px', '10px', '10px', '15px'],\n    pl: ['10px', '10px', '10px', '10px', '10px', '15px']\n  },\n  loadMoreStyle: {\n    flexBox: true,\n    justifyContent: 'center',\n    mt: '1rem'\n  }\n};\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LoadMore\");\n$RefreshReg$(_c2, \"SectionSimGrid\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/TripFinder/packages/hotel-next/components/SectionSimGrid/SectionSimGrid.js"],"names":["React","PropTypes","Text","Box","SimCard","LoadMore","handleLoadMore","showButton","buttonText","loading","loadMoreComponent","loadMoreStyle","SectionSimGrid","data","totalItem","limit","columnWidth","paginationComponent","placeholder","rowStyle","columnStyle","link","n","Number","limits","Array","fill","length","map","item","id","i","propTypes","array","isRequired","number","oneOfType","string","element","func","bool","object","defaultProps","flexBox","flexWrap","mr","ml","pr","pl","justifyContent","mt"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AAEA,OAAOC,OAAP,MAAoB,oBAApB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAChBC,EAAAA,cADgB;AAEhBC,EAAAA,UAFgB;AAGhBC,EAAAA,UAHgB;AAIhBC,EAAAA,OAJgB;AAKhBC,EAAAA,iBALgB;AAMhBC,EAAAA;AANgB,CAAD,KAOX;AACJ,SACE,CAAC,CAACJ,UAAF,IACE,MAAC,GAAD;AAAK,IAAA,SAAS,EAAC;AAAf,KAAsCI,aAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGD,iBAAiB,GAChBA,iBADgB,GAGhB;AAAQ,IAAA,OAAO,EAAED,OAAjB;AAA0B,IAAA,OAAO,EAAEH,cAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,UAAU,IAAI,WADjB,CAJJ,CAFJ;AAaD,CArBD;;KAAMH,Q;AAuBN,eAAe,SAASO,cAAT,CAAwB;AACrCC,EAAAA,IAAI,GAAG,EAD8B;AAErCC,EAAAA,SAFqC;AAGrCC,EAAAA,KAHqC;AAIrCC,EAAAA,WAJqC;AAKrCC,EAAAA,mBALqC;AAMrCX,EAAAA,cANqC;AAOrCI,EAAAA,iBAPqC;AAQrCQ,EAAAA,WARqC;AASrCT,EAAAA,OATqC;AAUrCD,EAAAA,UAVqC;AAWrCW,EAAAA,QAXqC;AAYrCC,EAAAA,WAZqC;AAarCT,EAAAA,aAbqC;AAcrCU,EAAAA;AAdqC,CAAxB,EAeZ;AACD,QAAMC,CAAC,GAAGP,KAAK,GAAGQ,MAAM,CAACR,KAAD,CAAT,GAAmB,CAAlC;AACA,QAAMS,MAAM,GAAGC,KAAK,CAACH,CAAD,CAAL,CAASI,IAAT,CAAc,CAAd,CAAf;AAEA,MAAInB,UAAU,GAAGM,IAAI,CAACc,MAAL,GAAcb,SAA/B;AAEA,SACE,4BACE,MAAC,GAAD;AAAK,IAAA,SAAS,EAAC;AAAf,KAAkCK,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGN,IAAI,IAAIA,IAAI,CAACc,MAAb,GACGd,IAAI,CAACe,GAAL,CAAUC,IAAD,IAAU;AACjB,WACE,MAAC,GAAD;AACE,MAAA,SAAS,EAAC,aADZ;AAEE,MAAA,KAAK,EAAEb,WAFT;AAGE,MAAA,GAAG,EAAEa,IAAI,CAACC;AAHZ,OAIMV,WAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAME,MAAC,OAAD;AAAS,MAAA,IAAI,EAAEC;AAAf,OAAyBQ,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OANF,CADF;AAUD,GAXD,CADH,GAaG,IAdN,EAeGpB,OAAO,IACNe,MAAM,CAACI,GAAP,CAAW,CAACC,IAAD,EAAOE,CAAP,KACT,MAAC,GAAD;AACE,IAAA,SAAS,EAAC,aADZ;AAEE,IAAA,KAAK,EAAEf,WAFT;AAGE,IAAA,GAAG,EAAEe;AAHP,KAIMX,WAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMGF,WAAW,GAAGA,WAAH,GAAiB,MAAC,IAAD;AAAM,IAAA,OAAO,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAN/B,CADF,CAhBJ,CADF,EA6BGX,UAAU,IACT,MAAC,QAAD;AACE,IAAA,UAAU,EAAEA,UADd;AAEE,IAAA,cAAc,EAAED,cAFlB;AAGE,IAAA,OAAO,EAAEG,OAHX;AAIE,IAAA,UAAU,EAAED,UAJd;AAKE,IAAA,iBAAiB,EAAEE,iBALrB;AAME,IAAA,aAAa,EAAEC,aANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA9BJ,EAuCGM,mBAAmB,IAClB,MAAC,GAAD;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqCA,mBAArC,CAxCJ,CADF;AA6CD;MAlEuBL,c;AAoExBA,cAAc,CAACoB,SAAf,GAA2B;AACzBnB,EAAAA,IAAI,EAAEZ,SAAS,CAACgC,KAAV,CAAgBC,UADG;AAEzBpB,EAAAA,SAAS,EAAEb,SAAS,CAACkC,MAFI;AAGzBnB,EAAAA,WAAW,EAAEf,SAAS,CAACmC,SAAV,CAAoB,CAC/BnC,SAAS,CAACoC,MADqB,EAE/BpC,SAAS,CAACkC,MAFqB,EAG/BlC,SAAS,CAACgC,KAHqB,CAApB,CAHY;AAQzBhB,EAAAA,mBAAmB,EAAEhB,SAAS,CAACqC,OARN;AASzBhC,EAAAA,cAAc,EAAEL,SAAS,CAACsC,IATD;AAUzB7B,EAAAA,iBAAiB,EAAET,SAAS,CAACqC,OAVJ;AAWzBpB,EAAAA,WAAW,EAAEjB,SAAS,CAACqC,OAXE;AAYzB7B,EAAAA,OAAO,EAAER,SAAS,CAACuC,IAZM;AAazBzB,EAAAA,KAAK,EAAEd,SAAS,CAACkC,MAbQ;AAczB3B,EAAAA,UAAU,EAAEP,SAAS,CAACoC,MAdG;AAezBlB,EAAAA,QAAQ,EAAElB,SAAS,CAACwC,MAfK;AAgBzBrB,EAAAA,WAAW,EAAEnB,SAAS,CAACwC,MAhBE;AAiBzB9B,EAAAA,aAAa,EAAEV,SAAS,CAACwC;AAjBA,CAA3B;AAoBA7B,cAAc,CAAC8B,YAAf,GAA8B;AAC5BvB,EAAAA,QAAQ,EAAE;AACRwB,IAAAA,OAAO,EAAE,IADD;AAERC,IAAAA,QAAQ,EAAE,MAFF;AAGRC,IAAAA,EAAE,EAAE,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB,EAA4B,OAA5B,EAAqC,OAArC,EAA8C,OAA9C,CAHI;AAIRC,IAAAA,EAAE,EAAE,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB,EAA4B,OAA5B,EAAqC,OAArC,EAA8C,OAA9C;AAJI,GADkB;AAO5B1B,EAAAA,WAAW,EAAE;AACX2B,IAAAA,EAAE,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,EAAyB,MAAzB,EAAiC,MAAjC,EAAyC,MAAzC,CADO;AAEXC,IAAAA,EAAE,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,EAAyB,MAAzB,EAAiC,MAAjC,EAAyC,MAAzC;AAFO,GAPe;AAW5BrC,EAAAA,aAAa,EAAE;AACbgC,IAAAA,OAAO,EAAE,IADI;AAEbM,IAAAA,cAAc,EAAE,QAFH;AAGbC,IAAAA,EAAE,EAAE;AAHS;AAXa,CAA9B","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Text from 'components/UI/Text/Text';\r\nimport Box from 'components/UI/Box/Box';\r\nimport { Button } from 'antd';\r\nimport SimCard from '../SimCard/SimCard';\r\n\r\nconst LoadMore = ({\r\n  handleLoadMore,\r\n  showButton,\r\n  buttonText,\r\n  loading,\r\n  loadMoreComponent,\r\n  loadMoreStyle,\r\n}) => {\r\n  return (\r\n    !!showButton && (\r\n      <Box className=\"loadmore_wrapper\" {...loadMoreStyle}>\r\n        {loadMoreComponent ? (\r\n          loadMoreComponent\r\n        ) : (\r\n          <Button loading={loading} onClick={handleLoadMore}>\r\n            {buttonText || 'Load More'}\r\n          </Button>\r\n        )}\r\n      </Box>\r\n    )\r\n  );\r\n};\r\n\r\nexport default function SectionSimGrid({\r\n  data = [],\r\n  totalItem,\r\n  limit,\r\n  columnWidth,\r\n  paginationComponent,\r\n  handleLoadMore,\r\n  loadMoreComponent,\r\n  placeholder,\r\n  loading,\r\n  buttonText,\r\n  rowStyle,\r\n  columnStyle,\r\n  loadMoreStyle,\r\n  link,\r\n}) {\r\n  const n = limit ? Number(limit) : 1;\r\n  const limits = Array(n).fill(0);\r\n\r\n  let showButton = data.length < totalItem;\r\n\r\n  return (\r\n    <>\r\n      <Box className=\"grid_wrapper\" {...rowStyle}>\r\n        {data && data.length\r\n          ? data.map((item) => {\r\n              return (\r\n                <Box\r\n                  className=\"grid_column\"\r\n                  width={columnWidth}\r\n                  key={item.id}\r\n                  {...columnStyle}\r\n                >\r\n                  <SimCard link={link} {...item}/>\r\n                </Box>\r\n              );\r\n            })\r\n          : null}\r\n        {loading &&\r\n          limits.map((item, i) => (\r\n            <Box\r\n              className=\"grid_column\"\r\n              width={columnWidth}\r\n              key={i}\r\n              {...columnStyle}\r\n            >\r\n              {placeholder ? placeholder : <Text content=\"Loading ...\" />}\r\n            </Box>\r\n          ))}\r\n      </Box>\r\n\r\n      {showButton && (\r\n        <LoadMore\r\n          showButton={showButton}\r\n          handleLoadMore={handleLoadMore}\r\n          loading={loading}\r\n          buttonText={buttonText}\r\n          loadMoreComponent={loadMoreComponent}\r\n          loadMoreStyle={loadMoreStyle}\r\n        />\r\n      )}\r\n      {paginationComponent && (\r\n        <Box className=\"pagination_wrapper\">{paginationComponent}</Box>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nSectionSimGrid.propTypes = {\r\n  data: PropTypes.array.isRequired,\r\n  totalItem: PropTypes.number,\r\n  columnWidth: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.number,\r\n    PropTypes.array,\r\n  ]),\r\n  paginationComponent: PropTypes.element,\r\n  handleLoadMore: PropTypes.func,\r\n  loadMoreComponent: PropTypes.element,\r\n  placeholder: PropTypes.element,\r\n  loading: PropTypes.bool,\r\n  limit: PropTypes.number,\r\n  buttonText: PropTypes.string,\r\n  rowStyle: PropTypes.object,\r\n  columnStyle: PropTypes.object,\r\n  loadMoreStyle: PropTypes.object,\r\n};\r\n\r\nSectionSimGrid.defaultProps = {\r\n  rowStyle: {\r\n    flexBox: true,\r\n    flexWrap: 'wrap',\r\n    mr: ['-10px', '-10px', '-10px', '-10px', '-10px', '-15px'],\r\n    ml: ['-10px', '-10px', '-10px', '-10px', '-10px', '-15px'],\r\n  },\r\n  columnStyle: {\r\n    pr: ['10px', '10px', '10px', '10px', '10px', '15px'],\r\n    pl: ['10px', '10px', '10px', '10px', '10px', '15px'],\r\n  },\r\n  loadMoreStyle: {\r\n    flexBox: true,\r\n    justifyContent: 'center',\r\n    mt: '1rem',\r\n  },\r\n};\r\n"]},"metadata":{},"sourceType":"module"}